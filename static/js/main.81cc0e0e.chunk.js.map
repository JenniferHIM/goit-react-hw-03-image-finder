{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/ImageGallery/ImageGallery.module.css","components/Notify/Notify.module.css","App.module.css","services/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Notify/Notify.js","components/Modal/Modal.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css"],"names":["module","exports","fetchImage","searchQuery","page","a","axios","get","response","data","Searchbar","state","changeInput","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","className","styles","SearchForm","type","button","label","input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","toggleModal","src","webformatURL","alt","tags","onClick","status","largeImageURL","ImageGallery","images","map","id","Notify","message","Modal","checkEvent","key","currentTarget","window","addEventListener","removeEventListener","Overlay","img","Button","buttonBox","App","totalHits","isLoading","error","notify","showPopup","showButton","targetImage","onButtonMoreClick","prevState","checkButtonAndNotify","length","searchImages","prevProps","then","hits","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","finally","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81cc0e0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3jsGC\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__3FKmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2YWUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__a3LQs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notify\":\"Notify_Notify__16fv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Qmq0i\"};","import axios from 'axios';\r\n\r\nconst KEY = '21282132-86f7ea58f9a9b3bb2c4722a7e';\r\n\r\nconst fetchImage = async (searchQuery, page) => {\r\n  const response = await axios.get(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport default fetchImage;\r\n\r\n","import React, { Component } from 'react';\r\nimport styles from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  changeInput = e => {\r\n    this.setState({ searchQuery: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.button}>\r\n            <span className={styles.label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search pictures\"\r\n            value={searchQuery}\r\n            onChange={this.changeInput}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ image, toggleModal }) => {\r\n  const onClick = () => {\r\n    toggleModal({\r\n      status: true,\r\n      src: image.largeImageURL,\r\n      alt: image.tags,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        className={styles.image}\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ images, toggleModal }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          toggleModal={toggleModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport styles from './Notify.module.css';\r\n\r\nconst Notify = ({ message }) => {\r\n  return <p className={styles.Notify}>{message}</p>;\r\n};\r\n\r\nexport default Notify;","import React, { Component } from 'react';\r\nimport styles from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.checkEvent);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.checkEvent);\r\n  }\r\n\r\n  checkEvent = e => {\r\n    if (e.key === 'Escape' || e.target === e.currentTarget) {\r\n      this.props.toggleModal({ status: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return (\r\n      <div className={styles.Overlay} onClick={this.checkEvent}>\r\n        <div className={styles.Modal}>\r\n          <img className={styles.img} src={src} alt={alt} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <div className={styles.buttonBox}>\r\n            <button className={styles.Button} onClick={onClick}>\r\n                Load more\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport fetchImage from './services/apiService';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Notify from './components/Notify';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    totalHits: 0,\n    searchQuery: '',\n    page: 1,\n    isLoading: false,\n    error: null,\n    notify: false,\n    message: '',\n    showPopup: false,\n    showButton: false,\n    targetImage: null,\n  };\n\n  componentDidMount() {\n    this.searchImages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.searchImages(searchQuery, 1);\n      this.setState({ page: 1 });\n    }\n    if (prevState.page !== page) {\n      this.searchImages(searchQuery, page);\n    }\n  }\n\n  searchImages(searchQuery = '', page = 1) {\n    if (searchQuery !== '') {\n      this.setState({\n        isLoading: true,\n        notify: false,\n      });\n\n      fetchImage(searchQuery, page)\n        .then(data => {\n          if (page === 1) {\n            this.setState({\n              totalHits: data.totalHits,\n              images: data.hits,\n            });\n          } else {\n            this.setState(prevState => ({\n              images: [...prevState.images, ...data.hits],\n            }));\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n          }\n          this.checkButtonAndNotify();\n        })\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n    } else {\n      this.setState({\n        images: [],\n        showButton: false,\n        message: 'Please input search request',\n        notify: true,\n      });\n    }\n  }\n\n  onSubmit = value => {\n    this.setState({ searchQuery: value });\n  };\n\n  onButtonMoreClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  checkButtonAndNotify = () => {\n    const { totalHits, images } = this.state;\n\n    if (totalHits > images.length) {\n      this.setState({ showButton: true });\n    } else {\n      this.setState({ showButton: false });\n    }\n\n    if (!totalHits) {\n      this.setState({\n        message: 'Nothing was found. Try again.',\n        notify: true,\n      });\n    } else {\n      this.setState({ notify: false });\n    }\n  };\n\n  toggleModal = ({ status, src, alt }) => {\n    if (status) {\n      this.setState({\n        targetImage: { src, alt },\n        showPopup: true,\n      });\n    } else {\n      this.setState({\n        targetImage: null,\n        showPopup: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      isLoading,\n      error,\n      notify,\n      message,\n      showPopup,\n      targetImage,\n      showButton,\n    } = this.state;\n\n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={this.onSubmit} />\n        {error && <Notify message={`Something wrong: ${error.message}`} />}\n        {isLoading && (\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {images.length > 0 && (\n          <ImageGallery images={images} toggleModal={this.toggleModal} />\n        )}\n        {notify && <Notify message={message} />}\n        {showPopup && (\n          <Modal\n            src={targetImage.src}\n            alt={targetImage.alt}\n            toggleModal={this.toggleModal}\n          />\n        )}\n        {showButton && <Button onClick={this.onButtonMoreClick} />}\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2LNRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2fmic\",\"Modal\":\"Modal_Modal__1izMi\"};"],"sourceRoot":""}